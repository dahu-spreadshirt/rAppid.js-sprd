{
    "methods": [
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                93,
                95
            ],
            "description": "Returns the ENVIRONMENT object",
            "returns": {
                "types": [
                    "js.core.Bindable"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "ENV",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                101,
                103
            ],
            "description": "Returns the start parameter of the application",
            "returns": {
                "types": [
                    "Object"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "PARAMETER",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "config"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                198,
                200
            ],
            "definedBy": "js.core.Component",
            "name": "_addConfiguration",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "template"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                191,
                196
            ],
            "definedBy": "js.core.Component",
            "name": "_addTemplate",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                965,
                967
            ],
            "definedBy": "js.data.DataSource",
            "name": "_afterModelSave",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                198,
                200
            ],
            "definedBy": "js.core.EventDispatcher",
            "name": "_beforeDestroy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                955,
                957
            ],
            "definedBy": "js.data.DataSource",
            "name": "_beforeModelSave",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                251,
                260
            ],
            "definedBy": "js.core.Bindable",
            "name": "_bindBus",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resource"
                },
                {
                    "name": "endPoint"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                233,
                254
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "_buildUriForResource",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                537,
                539
            ],
            "private": "This method is called after all children are initialized",
            "definedBy": "js.core.Component",
            "name": "_childrenInitialized",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "desc"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                366,
                383
            ],
            "definedBy": "js.core.Component",
            "name": "_cleanUpDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "attribute",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "key",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                481,
                507
            ],
            "description": "Returns a copy of the attribute. This method is a hook for further cloning options",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_cloneAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "attributes",
                    "optional": false,
                    "description": "contains the changed attributes"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false,
                    "description": "the options passed in the set method"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                763,
                765
            ],
            "description": "called after attributes has set and some of the has been changed\n",
            "abstract": "",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_commitChangedAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                668,
                671
            ],
            "definedBy": "js.core.Bindable",
            "name": "_commitInvalidatedAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "DOM"
                    ],
                    "name": "node",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "attributes",
                    "optional": true,
                    "description": "for new Component"
                },
                {
                    "name": "rootScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                447,
                479
            ],
            "description": "Create {@link Component} for DOM Node with given attributes",
            "definedBy": "js.core.Component",
            "name": "_createComponentForNode",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "sortParmeters"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                682,
                697
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "_createSortParameter",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "node"
                },
                {
                    "name": "rootScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                504,
                512
            ],
            "definedBy": "js.core.Component",
            "name": "_createTextElement",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "fnc",
                    "optional": false
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "cacheId",
                    "optional": true
                },
                {
                    "types": [
                        "Number"
                    ],
                    "name": "delay",
                    "optional": true
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true
                },
                {
                    "types": [
                        "Array"
                    ],
                    "name": "parameters",
                    "optional": true
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "strategy",
                    "optional": true,
                    "defaultValue": "loop",
                    "description": "loop will trigger the function at least every delay, wait will clear the timeout"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                80,
                114
            ],
            "description": "",
            "private": "",
            "definedBy": "js.core.Base",
            "name": "_debounceFunctionCall",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                513,
                515
            ],
            "description": "",
            "returns": {
                "types": [
                    "Object"
                ],
                "description": "returns the default attributes and includes the defaults from base classes"
            },
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_defaultAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                206,
                212
            ],
            "definedBy": "js.core.EventDispatcher",
            "name": "_destroyCompleted",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                273,
                286
            ],
            "definedBy": "js.core.Bindable",
            "name": "_extract",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "property",
                    "optional": false,
                    "description": "the name of the static property used to find defaults"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                524,
                552
            ],
            "description": "generates a default chain containing the values from this instance and base classes\n",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_generateDefaultsChain",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "descriptor"
                },
                {
                    "name": "rootScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                58,
                102
            ],
            "definedBy": "js.core.Element",
            "name": "_getAttributesFromDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "descriptor",
                    "optional": false
                },
                {
                    "name": "rootScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                518,
                532
            ],
            "description": "Converts all child nodes of a descriptor to instances of Components or TextElement",
            "definedBy": "js.core.Component",
            "name": "_getChildrenFromDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resource"
                }
            ],
            "annotations": {},
            "definedInFile": "sprd/data/SprdDataSource.js",
            "lineNumbers": [
                10,
                27
            ],
            "name": "_getConfigurationForResource",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "factory"
                },
                {
                    "name": "parent"
                },
                {
                    "name": "data"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1048,
                1059
            ],
            "definedBy": "js.data.DataSource",
            "name": "_getContext",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "eventDefinition"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                398,
                400
            ],
            "definedBy": "js.core.Component",
            "name": "_getEventName",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "eventName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                415,
                418
            ],
            "definedBy": "js.core.Component",
            "name": "_getEventTypeForAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "method"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                175,
                184
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "_getHttpMethod",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "node"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                103,
                105
            ],
            "definedBy": "js.core.Element",
            "name": "_getLocalNameFromNode",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                699,
                709
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "_getPagingParameterForCollectionPage",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "desc"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                171,
                184
            ],
            "definedBy": "js.core.Element",
            "name": "_getTextContentFromDescriptor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                },
                {
                    "name": "search"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                767,
                776
            ],
            "definedBy": "js.core.Bindable",
            "name": "_hasAll",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                },
                {
                    "name": "search"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                778,
                787
            ],
            "definedBy": "js.core.Bindable",
            "name": "_hasSome",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                368,
                379
            ],
            "definedBy": "js.core.Bindable",
            "name": "_initializationComplete",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                164,
                174
            ],
            "description": "starts the initialization of the `Bindable` if it hasn't initialized yet.\n\nIt calls the following methods:\n\n* initialize();\n* _initializeBindings();\n",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_initialize",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                117,
                118
            ],
            "definedBy": "js.core.Element",
            "name": "_initializeAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                291,
                362
            ],
            "description": "Initialize all Binding and Event attributes",
            "definedBy": "js.core.Bindable",
            "name": "_initializeBindings",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                364,
                366
            ],
            "definedBy": "js.core.Bindable",
            "name": "_initializeBindingsBeforeComplete",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "childComponents"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                219,
                224
            ],
            "definedBy": "js.core.Component",
            "name": "_initializeChildren",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                120,
                121
            ],
            "definedBy": "js.core.Element",
            "name": "_initializeDescriptors",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attribute"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                114,
                116
            ],
            "definedBy": "js.core.Element",
            "name": "_initializeEventAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                149,
                152
            ],
            "description": "\ninvokes the `_initialize` method. This method is a hook function and is overwritten by js.core.Component\n",
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_initializeFromCtor",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributes"
                },
                {
                    "name": "rootScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                420,
                439
            ],
            "definedBy": "js.core.Component",
            "name": "_initializeXamlEventAttributes",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                224,
                248
            ],
            "definedBy": "js.core.Bindable",
            "name": "_inject",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                189,
                191
            ],
            "description": "\nreturns the chained object defining the required injections\n",
            "returns": {
                "types": [
                    "Object"
                ]
            },
            "private": "",
            "definedBy": "js.core.Bindable",
            "name": "_injectChain",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                202,
                204
            ],
            "definedBy": "js.core.EventDispatcher",
            "name": "_innerDestroy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "event",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                406,
                413
            ],
            "description": "Returns true if event is defined in Component event list",
            "definedBy": "js.core.Component",
            "name": "_isComponentEvent",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributeName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                385,
                387
            ],
            "definedBy": "js.core.Component",
            "name": "_isEventAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributeName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                390,
                392
            ],
            "definedBy": "js.core.Component",
            "name": "_isFunctionAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "attributeName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                394,
                396
            ],
            "definedBy": "js.core.Component",
            "name": "_isXamlEventAttribute",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "domNode",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                552,
                567
            ],
            "description": "determinate the local-name of a DomNode\n",
            "definedBy": "js.core.Component",
            "name": "_localNameFromDomNode",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "xhr"
                },
                {
                    "name": "model"
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                310,
                333
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "_parseModelPayload",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                381,
                383
            ],
            "definedBy": "js.core.Bindable",
            "name": "_postConstruct",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                385,
                387
            ],
            "definedBy": "js.core.Bindable",
            "name": "_preDestroy",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                167,
                169
            ],
            "definedBy": "js.core.Element",
            "name": "_preinitialize",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resourcePath"
                },
                {
                    "name": "resource"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                256,
                258
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "_resourcePathToUri",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                959,
                963
            ],
            "definedBy": "js.data.DataSource",
            "name": "_saveModel",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                206,
                209
            ],
            "description": "sets up the Bindable or Component. It will inject the required injections and\nalso will bind the application wide `MessageBus` to all methods annotated with the\n`.bus()` method annotation\n\nFor `Components` the setUp method is invoked automatically during the add of the Component.\nFor non `Components`\n\n",
            "private": "",
            "see": [
                "{js.core.MessageBus}"
            ],
            "definedBy": "js.core.Bindable",
            "name": "_setUp",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                219,
                222
            ],
            "description": "tears down the Bindable or Component. It will remove the injected variables and\nalso will unbind the annotated event handlers from the application wide `MessageBus`\n",
            "private": "",
            "see": [
                "{js.core.MessageBus}"
            ],
            "definedBy": "js.core.Bindable",
            "name": "_tearDown",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "queryObject"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1061,
                1063
            ],
            "definedBy": "js.data.DataSource",
            "name": "_translateQueryObject",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                262,
                271
            ],
            "definedBy": "js.core.Bindable",
            "name": "_unbindBus",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                754,
                756
            ],
            "definedBy": "js.data.DataSource",
            "name": "_validateConfiguration",
            "visibility": "protected"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.core.Element"
                    ],
                    "name": "child",
                    "optional": false
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                130,
                161
            ],
            "description": "adds a children",
            "definedBy": "js.core.Component",
            "name": "addChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "path"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                569,
                577
            ],
            "definedBy": "js.core.Component",
            "name": "baseUrl",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "eventType",
                    "optional": false,
                    "description": "The name of the event"
                },
                {
                    "name": "callback"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true,
                    "description": "This sets the scope for the callback function"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                75,
                87
            ],
            "description": "Binds a callback and a scope to a given eventType\n",
            "definedBy": "js.core.EventDispatcher",
            "name": "bind",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                109,
                111
            ],
            "description": "provides access to the MessageBus",
            "returns": {
                "types": [
                    "js.core.MessageBus"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "bus",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                804,
                806
            ],
            "description": "Clears all attributes",
            "returns": {
                "types": [
                    "this"
                ]
            },
            "definedBy": "js.core.Bindable",
            "name": "clear",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                454,
                474
            ],
            "description": "This method returns a copy of the Object",
            "returns": {
                "types": [
                    "js.core.Bindable"
                ],
                "description": "a fresh copy of the Bindable"
            },
            "definedBy": "js.core.Bindable",
            "name": "clone",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                727,
                731
            ],
            "definedBy": "js.data.DataSource",
            "name": "composeModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collection"
                },
                {
                    "name": "options"
                },
                {
                    "name": "callback"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                926,
                928
            ],
            "definedBy": "js.data.DataSource",
            "name": "countCollection",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "path"
                },
                {
                    "name": "callback"
                },
                {
                    "name": "callbackScope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                497,
                502
            ],
            "definedBy": "js.core.Component",
            "name": "createBinding",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                356,
                364
            ],
            "definedBy": "js.core.Component",
            "name": "createChildren",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false,
                    "description": "The factory"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "context",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                882,
                886
            ],
            "description": "Creates a collection by a given factory in a caching context",
            "returns": {
                "types": [
                    "js.data.Collection"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "createCollection",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "attributes",
                    "optional": true
                },
                {
                    "types": null,
                    "name": "descriptor",
                    "optional": true,
                    "defaultValue": "false"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                488,
                495
            ],
            "description": "",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "createComponent",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "contextModel"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "properties",
                    "optional": false
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "parentContext",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                859,
                861
            ],
            "description": "Creates a context with the given properties",
            "returns": {
                "types": [
                    "js.data.DataSource.Context"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "createContext",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "factory",
                    "optional": false
                },
                {
                    "types": [
                        "String",
                        "Number"
                    ],
                    "name": "id",
                    "optional": true
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "context",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                870,
                873
            ],
            "description": "Create an instance of {js.data.Entity}",
            "returns": {
                "types": [
                    "js.data.Entity"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "createEntity",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                8,
                14
            ],
            "definedBy": "js.core.Base",
            "name": "ctor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                185,
                196
            ],
            "description": "Clears up the instance",
            "definedBy": "js.core.EventDispatcher",
            "name": "destroy",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                37,
                39
            ],
            "description": "this is an empty function doing nothing. It can be used as fallback if a method requires a\ncallback function, which hasn't been passed.\n\n```\nfunction myFunction(callback) {\ncallback = callback || this.emptyCallback;\n}\n```\n",
            "returns": {
                "types": [
                    "Function"
                ],
                "description": "a function doing nothing"
            },
            "definedBy": "js.core.Base",
            "name": "emptyCallback",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "location"
                },
                {
                    "name": "request"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                502,
                510
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "extractIdFromLocation",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                },
                {
                    "name": "payload"
                },
                {
                    "name": "options"
                },
                {
                    "name": "xhr"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                586,
                594
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "extractListData",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "collectionPage"
                },
                {
                    "name": "payload"
                },
                {
                    "name": "options"
                },
                {
                    "name": "xhr"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                582,
                584
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "extractListMetaData",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                156,
                165
            ],
            "definedBy": "js.core.Element",
            "name": "find",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Object"
                    ],
                    "name": "scope",
                    "optional": true,
                    "defaultValue": "this",
                    "description": "the scope where the path is evaluated"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "key",
                    "optional": false,
                    "description": "or path"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                680,
                743
            ],
            "description": "evaluates a path to retrieve a value\n",
            "returns": {
                "types": null,
                "description": "the value for the path or undefined"
            },
            "definedBy": "js.core.Bindable",
            "name": "get",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "collectionClassName",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                767,
                769
            ],
            "description": "Returns the configuration for a collectionclass name",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getConfigurationForCollectionClassName",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "modelClass"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                758,
                760
            ],
            "definedBy": "js.data.DataSource",
            "name": "getConfigurationForModelClass",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "contextModel",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "properties",
                    "optional": false
                },
                {
                    "types": [
                        "js.data.DataSource.Context"
                    ],
                    "name": "parentContext",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                833,
                843
            ],
            "description": "Returns the context for a properties object",
            "returns": {
                "types": [
                    "js.data.DataSource.Context"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getContextByProperties",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "Function"
                    ],
                    "name": "childFactory",
                    "optional": false
                },
                {
                    "types": [
                        "js.data.Entity",
                        "js.data.Collection"
                    ],
                    "name": "requestor",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                776,
                824
            ],
            "description": "",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getContextForChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "action",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1038,
                1040
            ],
            "description": "Returns the format processor",
            "returns": {
                "types": [
                    "*"
                ]
            },
            "definedBy": "js.data.DataSource",
            "name": "getFormatProcessor",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "contentType"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                740,
                749
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "getFormatProcessorForContentType",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                198,
                214
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "getPathComponentsForModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "modelClass"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                216,
                231
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "getPathComponentsForModelClass",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "resource"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                187,
                196
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "getPathComponentsForResource",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Collection"
                    ],
                    "name": "collection",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1024,
                1031
            ],
            "description": "Returns the correct processor for a collection\n",
            "returns": {
                "types": [
                    "js.data.DataSource.Processor"
                ],
                "description": "processor"
            },
            "definedBy": "js.data.DataSource",
            "name": "getProcessorForCollection",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                988,
                995
            ],
            "description": "Returns the correct processor for model\n",
            "returns": {
                "types": [
                    "js.data.DataSource.Processor"
                ],
                "description": "processor"
            },
            "definedBy": "js.data.DataSource",
            "name": "getProcessorForModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "modelClass"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                1004,
                1015
            ],
            "description": "Returns the correct processor for model class\n",
            "returns": {
                "types": [
                    "js.data.DataSource.Processor"
                ],
                "description": "processor"
            },
            "definedBy": "js.data.DataSource",
            "name": "getProcessorForModelClass",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                170,
                172
            ],
            "definedBy": "js.data.RestDataSource",
            "name": "getQueryComposer",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "method"
                },
                {
                    "name": "resource",
                    "types": null,
                    "optional": false,
                    "description": "{js.data.Model|js.data.Collection} model or collection which gets loaded"
                }
            ],
            "annotations": {},
            "definedInFile": "sprd/data/SprdDataSource.js",
            "lineNumbers": [
                29,
                76
            ],
            "definedBy": "js.data.RestDataSource",
            "overwritesMethod": true,
            "name": "getQueryParameters",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "fncName"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                400,
                409
            ],
            "definedBy": "js.core.Bindable",
            "name": "getScopeForFncName",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                389,
                398
            ],
            "definedBy": "js.core.Bindable",
            "name": "getScopeForKey",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "name",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                208,
                217
            ],
            "description": "Goes up the tree and searches for a template component with the given name.\nReturns null if no template was found.",
            "returns": {
                "types": [
                    "js.core.Template"
                ]
            },
            "definedBy": "js.core.Component",
            "name": "getTemplate",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "request"
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                364,
                420
            ],
            "description": "",
            "definedBy": "js.data.RestDataSource",
            "name": "handleCreationSuccess",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "request"
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                344,
                353
            ],
            "description": "",
            "definedBy": "js.data.RestDataSource",
            "name": "handleSaveError",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "request"
                },
                {
                    "types": null,
                    "name": "xhr",
                    "optional": false
                },
                {
                    "types": null,
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/RestDataSource.js",
            "lineNumbers": [
                489,
                500
            ],
            "description": "",
            "definedBy": "js.data.RestDataSource",
            "name": "handleUpdateSuccess",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "path",
                    "optional": false,
                    "description": "to get the value"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                751,
                753
            ],
            "description": "determinate if a attribute is available\n",
            "returns": {
                "types": [
                    "Boolean"
                ],
                "description": "true if attribute is not undefined"
            },
            "definedBy": "js.core.Bindable",
            "name": "has",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                179,
                180
            ],
            "description": "the initialize method is a hook function to add a custom logic during the initiation process.",
            "definedBy": "js.core.Bindable",
            "name": "initialize",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                712,
                714
            ],
            "definedBy": "js.data.DataSource",
            "name": "initializeFormatProcessors",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                716,
                725
            ],
            "definedBy": "js.data.DataSource",
            "name": "initializeProcessors",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "b"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                879,
                896
            ],
            "definedBy": "js.core.Bindable",
            "name": "isDeepEqual",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "value"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                193,
                195
            ],
            "definedBy": "js.core.Element",
            "name": "isDefined",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "b"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                897,
                899
            ],
            "definedBy": "js.core.Bindable",
            "name": "isEqual",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Collection"
                    ],
                    "name": "list",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                920,
                924
            ],
            "description": "Same as loadModel, but for a collection page",
            "definedBy": "js.data.DataSource",
            "name": "loadCollectionPage",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                908,
                912
            ],
            "description": "Loads the data for a given model. (abstract)\nThis method is called by model.fetch()",
            "definedBy": "js.data.DataSource",
            "name": "loadModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String",
                        "Array"
                    ],
                    "name": "message",
                    "optional": false,
                    "description": "the message to log"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "level",
                    "optional": true,
                    "defaultValue": "\"info\"",
                    "description": "the service level of (debug, info, warn, error)"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                47,
                68
            ],
            "description": "logs messages to configured logging functions\n",
            "definedBy": "js.core.Base",
            "name": "log",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": null,
                    "name": "value",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Element.js",
            "lineNumbers": [
                190,
                192
            ],
            "description": "Binding helper to negate a Boolean value",
            "returns": {
                "types": [
                    "Boolean"
                ]
            },
            "definedBy": "js.core.Element",
            "name": "not",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "model"
                },
                {
                    "name": "data"
                },
                {
                    "name": "options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                733,
                738
            ],
            "definedBy": "js.data.DataSource",
            "name": "parseModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                185,
                189
            ],
            "definedBy": "js.core.Component",
            "name": "removeAllChildren",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "child"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                163,
                183
            ],
            "definedBy": "js.core.Component",
            "name": "removeChild",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                975,
                979
            ],
            "description": "Removes a model",
            "definedBy": "js.data.DataSource",
            "name": "removeModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "JSON"
                    ],
                    "name": "data",
                    "optional": false,
                    "description": "deserialized, parsed data"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false,
                    "description": "function (err, resolvedData)"
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                895,
                899
            ],
            "description": "resolve references to models and collections",
            "definedBy": "js.data.DataSource",
            "name": "resolveReferences",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                849,
                851
            ],
            "description": "Returns the root context of the data source",
            "returns": {
                "types": [
                    "js.data.DataSource.Context"
                ],
                "description": "context"
            },
            "definedBy": "js.data.DataSource",
            "name": "root",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Base.js",
            "lineNumbers": [
                21,
                23
            ],
            "description": "determinate if the application runs in the browser or on node\n",
            "returns": {
                "types": [
                    "Boolean"
                ],
                "description": "true if the application runs in a browser"
            },
            "definedBy": "js.core.Base",
            "name": "runsInBrowser",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "js.data.Model"
                    ],
                    "name": "model",
                    "optional": false
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                936,
                953
            ],
            "description": "Saves a model",
            "definedBy": "js.data.DataSource",
            "name": "saveModel",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "key",
                    "optional": false,
                    "description": "The attribute key"
                },
                {
                    "types": [
                        "String"
                    ],
                    "name": "value",
                    "optional": false,
                    "description": "The attribute value"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": false,
                    "description": "A hash of options"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                564,
                650
            ],
            "description": "Sets new values for attributes and notify about changes\n",
            "returns": {
                "types": [
                    "js.core.Bindable"
                ],
                "description": "this"
            },
            "definedBy": "js.core.Bindable",
            "name": "set",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "name": "key"
                },
                {
                    "name": "value"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                652,
                666
            ],
            "definedBy": "js.core.Bindable",
            "name": "setLater",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                421,
                449
            ],
            "description": "Writes attributes back to the source",
            "definedBy": "js.core.Bindable",
            "name": "sync",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "eventType",
                    "optional": false
                },
                {
                    "types": [
                        "EventDispatcher.Event",
                        "Object"
                    ],
                    "name": "event",
                    "optional": false,
                    "description": "If you use an Object the object is wrapped in an Event"
                },
                {
                    "types": null,
                    "name": "target",
                    "optional": false
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                96,
                157
            ],
            "description": "Triggers a specific event and the * event\n",
            "definedBy": "js.core.EventDispatcher",
            "name": "trigger",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String"
                    ],
                    "name": "eventType",
                    "optional": false
                },
                {
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "optional": false
                },
                {
                    "name": "scope"
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/EventDispatcher.js",
            "lineNumbers": [
                165,
                180
            ],
            "description": "Unbinds callbacks for events\n",
            "definedBy": "js.core.EventDispatcher",
            "name": "unbind",
            "visibility": "public"
        },
        {
            "type": "Method",
            "parameter": [
                {
                    "types": [
                        "String",
                        "Object"
                    ],
                    "name": "key",
                    "optional": false,
                    "description": "the attribute or attributes to unset"
                },
                {
                    "types": [
                        "Object"
                    ],
                    "name": "options",
                    "optional": true
                }
            ],
            "annotations": {},
            "definedInFile": "js/core/Bindable.js",
            "lineNumbers": [
                795,
                798
            ],
            "description": "Unset attribute on $",
            "returns": {
                "types": [
                    "this"
                ]
            },
            "definedBy": "js.core.Bindable",
            "name": "unset",
            "visibility": "public"
        }
    ],
    "staticMethods": [],
    "defaults": {
        "apiKey": {
            "name": "apiKey",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                5,
                5
            ]
        },
        "secret": {
            "name": "secret",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                6,
                6
            ]
        },
        "session": {
            "name": "session",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                7,
                7
            ]
        },
        "endPoint": {
            "name": "endPoint",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                57,
                57
            ],
            "description": "The endPoint of the REST API",
            "types": [
                "String"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "gateway": {
            "name": "gateway",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                63,
                63
            ],
            "description": "\nIf needed, the gateway of the REST API",
            "types": [
                "String"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "determinateContextAttribute": {
            "name": "determinateContextAttribute",
            "defaultType": "value",
            "visibility": "public",
            "value": "href",
            "lineNumbers": [
                68,
                68
            ],
            "description": "Tells the RestDataSource which attribute field to use for context determination of the fetched resources",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "parsePayloadOnCreate": {
            "name": "parsePayloadOnCreate",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "lineNumbers": [
                73,
                73
            ],
            "description": "If true the returned payload of a POST get's parsed and written back in the Model",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "parsePayloadOnUpdate": {
            "name": "parsePayloadOnUpdate",
            "defaultType": "value",
            "visibility": "public",
            "value": true,
            "lineNumbers": [
                78,
                78
            ],
            "description": "If true the returned payload of a PUT get's parsed and written back in the Model",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "useSafeHttpMethods": {
            "name": "useSafeHttpMethods",
            "defaultType": "value",
            "visibility": "public",
            "value": false,
            "lineNumbers": [
                83,
                83
            ],
            "description": "Sends the used HTTP method as a query parameter and uses the POST method",
            "types": [
                "Boolean"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "collectionPageSize": {
            "name": "collectionPageSize",
            "defaultType": "value",
            "visibility": "public",
            "value": 100,
            "lineNumbers": [
                89,
                89
            ],
            "description": "\nSet's the default collection page size for fetching collection",
            "types": [
                "Number"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "suffix": {
            "name": "suffix",
            "defaultType": "value",
            "visibility": "public",
            "value": null,
            "lineNumbers": [
                95,
                95
            ],
            "description": "a suffix like `.json` to add to each request",
            "types": [
                "String"
            ],
            "definedBy": "js.data.RestDataSource"
        },
        "dateFormat": {
            "name": "dateFormat",
            "defaultType": "value",
            "visibility": "public",
            "value": "YYYY-MM-DDTHH:mm:ssZ",
            "lineNumbers": [
                697,
                697
            ],
            "definedBy": "js.data.DataSource"
        },
        "cid": {
            "name": "cid",
            "defaultType": "factory",
            "visibility": "public",
            "lineNumbers": [
                66,
                66
            ],
            "description": "the cid is a unique identifier for the component within a xaml class. \\\nThe corresponding component will be automatically added to the $ of the instance of the xaml class.\n",
            "types": [
                "String"
            ],
            "definedBy": "js.core.Component"
        },
        "creationPolicy": {
            "name": "creationPolicy",
            "defaultType": "value",
            "visibility": "public",
            "value": "auto",
            "lineNumbers": [
                112,
                112
            ],
            "description": "Decides if the initialization of the component is started automatically or manually by the application",
            "types": [
                "String"
            ],
            "definedBy": "js.core.Element"
        }
    },
    "properties": {
        "$defaultProcessorFactory": {
            "name": "$defaultProcessorFactory",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                693,
                693
            ],
            "propertyType": "complex",
            "value": " Processor",
            "definedBy": "js.data.DataSource"
        },
        "$processors": {
            "name": "$processors",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                691,
                691
            ],
            "propertyType": "complex",
            "value": " {}",
            "definedBy": "js.data.DataSource"
        },
        "$entityFactory": {
            "name": "$entityFactory",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                692,
                692
            ],
            "propertyType": "complex",
            "value": " Entity",
            "definedBy": "js.data.DataSource"
        },
        "$defaultProcessor": {
            "name": "$defaultProcessor",
            "visibility": "private",
            "definedInFile": "js/data/DataSource.js",
            "lineNumbers": [
                694,
                694
            ],
            "propertyType": "value",
            "definedBy": "js.data.DataSource"
        },
        "$errorAttribute": {
            "name": "$errorAttribute",
            "visibility": "private",
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                69,
                69
            ],
            "propertyType": "value",
            "definedBy": "js.core.Component"
        },
        "$defaultContentName": {
            "name": "$defaultContentName",
            "visibility": "private",
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                74,
                74
            ],
            "propertyType": "value",
            "description": "if set all children from the descriptor will be placed into a\njs.core.Content block with the name of $defaultContentName",
            "definedBy": "js.core.Component"
        },
        "$defaultTemplateName": {
            "name": "$defaultTemplateName",
            "visibility": "private",
            "definedInFile": "js/core/Component.js",
            "lineNumbers": [
                76,
                76
            ],
            "propertyType": "value",
            "definedBy": "js.core.Component"
        }
    },
    "fqClassName": "sprd.data.SprdDataSource",
    "inherit": "js.data.RestDataSource",
    "dependencies": [
        "js.data.Collection",
        "js.data.Model",
        "js.data.RestDataSource",
        "underscore"
    ],
    "type": "js",
    "file": "sprd/data/SprdDataSource.js",
    "package": "sprd.data",
    "inheritancePath": [
        "js.data.RestDataSource",
        "js.data.DataSource",
        "js.core.Component",
        "js.core.Element",
        "js.core.Bindable",
        "js.core.EventDispatcher",
        "js.core.Base"
    ]
}