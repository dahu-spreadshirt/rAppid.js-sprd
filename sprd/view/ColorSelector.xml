<ui:SelectionView xmlns:js="js.core" xmlns:ui="js.ui" xmlns="http://www.w3.org/1999/xhtml"
                  needsSelection="{hasSelection()}">

    <js:Script><![CDATA[
        (function () {

            return {
                $classAttributes: ['productType','product'],

                defaults: {
                    componentClass: 'product-appearances',
                    itemKey: 'appearance',
                    colorWidth: 19,
                    // if null use default view
                    productType: null,
                    product: null,
                    multiSelect: false
                },
                _commitChangedAttributes: function (attributes) {
                    if (attributes.productType && attributes.productType.$.views) {
                        // if the article has the same
                        if (attributes.productType.$.views.$items !== this.$items) {
                            var productType = attributes.productType;
                            this.set('items', productType.$.appearances.$items);
                            this.set('selectedItem', productType.getDefaultAppearance());
                        }
                    } else if (attributes.productType === null) {
                        // set items to null
                        this.set('items', []);
                    }

                    if (attributes.product) {
                        this.set('productType', attributes.product.$.productType);
                        this.set('selectedItem', this.$.productType.getAppearanceById(attributes.product.$.appearance.id));
                    }

                    this.callBase();
                },
                getImageUrl: function (appearance) {
                    if (appearance.resources && appearance.resources.$items.length > 0) {
                        return appearance.resources.$items[0].href + ",width=" + this.$.colorWidth;
                    }
                }
            }
        })
        ]]></js:Script>
    <js:Template name="item">
        <button>
            <img src="{getImageUrl(${$appearance})}" width="{colorWidth}" alt="test"/>
        </button>

    </js:Template>
</ui:SelectionView>