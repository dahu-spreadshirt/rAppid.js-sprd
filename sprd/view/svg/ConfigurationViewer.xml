<sprdSvg:ConfigurationViewerClass xmlns="http://www.w3.org/1999/xhtml"
                                  xmlns:svg="js.svg"
                                  xmlns:sprdSvg="sprd.view.svg" class="{errorClass()}"
                                  cid="cv">

    <!--<svg:circle class="rotation-circle" cx="{cv.rotationX}" cy="{cv.rotationY}" r="{_rotationRadius}"-->
    <!--visible="{isRotating()}"/>-->

    <!--<svg:circle class="reference-circle" cx="{cv.rotationX}" cy="{cv.rotationY}" r="{outerCircleRadius(cv.configuration)}"-->
    <!--visible="{isRotating()}"/>-->

    <svg:line class="rotation-line" x1="{minus(enlarge(add(cv.downVector.getX(), cv.centerVector.getX())))}" x2="{enlarge(add(cv.downVector.getX(), cv.centerVector.getX()))}"
              y1="{minus(enlarge(add(cv.downVector.getY(), cv.centerVector.getY())))}" y2="{enlarge(add(cv.downVector.getY(), cv.centerVector.getY()))}"
              visible="{and(rotationSnap, isScaling())}"/>

    <svg:clipPath cid="clipPath" id="{id()}" clip-rule="evenodd"
                  translateX="{invert(cv.translateX)}" translateY="{invert(cv.translateY)}"
                  rotation="{invert(cv.rotation)}" rotationX="{cv.rotationX}" rotationY="{cv.rotationY}">
    </svg:clipPath>

    <svg:g cid="_assetContainerWrapper">
        <svg:g class="asset-container" cid="_assetContainer" scaleX="{_scale.x}" scaleY="{_scale.y}"/>
    </svg:g>

    <svg:circle class="rotation-center" cx="{cv.rotationX}" cy="{cv.rotationY}" r="{pixelToViewBox(2)}"
                visible="{isRotating()}"/>

    <svg:g translateX="{flipOffsetX()}" translateY="{flipOffsetY()}">
        <svg:rect class="configuration-boundary"
                  selected="{isSelectedConfigurationOrConfigurationHasError()}"
                  x="0" y="0"
                  width="{_configurationWidth}" height="{_configurationHeight}"/>

        <svg:g class="configuration-info" visible="{and(_configurationInfo, productViewer.$parent.showConfigurationInformation)}"
               _fontSize="{pixelToViewBox(15)}" translateY="-{pixelToViewBox(20)}">
            <svg:text visible="{scales()}" font-size="{_fontSize}" x="{half(_configurationWidth)}" text-anchor="middle">
                {getLocalizedSize(_configurationWidth,0)} x
                {getLocalizedSize(_configurationHeight,0)}
            </svg:text>
            <svg:text visible="{rotates()}" font-size="{_fontSize}" y="{add(handleY(), 20, mul(pixelToViewBox(_handleWidth), 2))}" x="{handleX()}" text-anchor="middle">
                {formatSize(_rotation)} Â°
            </svg:text>
            <svg:text visible="{isMoving()}" font-size="{_fontSize}" x="{half(_configurationWidth)}" text-anchor="middle">
                X: {getLocalizedSize(_offset.x,0)} ,
                Y: {getLocalizedSize(_offset.y,0)}
            </svg:text>
        </svg:g>

        <svg:circle class="configuration-handle scale"
                    selected="{isScalable()}"
                    cx="{handleX()}"
                    cy="{handleY()}"
                    r="{half(pixelToViewBox(_handleWidth))}"/>

        <svg:circle cid="_bigScaleHandle" class="big-configuration-handle scale"
                    selected="{isScalable()}" pointer-events="visible"
                    cx="{handleX()}"
                    cy="{handleY()}"
                    r="{pixelToViewBox(_handleWidth)}"/>


        <svg:g selected="{isScalable()}" class="configuration-handle-icon scale"
               scaleX="{pixelToViewBox(_handleIconScale)}" scaleY="{scaleX}"
               translateX="{substract(_configurationWidth,pixelToViewBox(_handleOffset))}"
               translateY="{substract(_configurationHeight,pixelToViewBox(_handleOffset))}"
               style="pointer-events: none"/>


    </svg:g>


</sprdSvg:ConfigurationViewerClass>