<view:ProductImage xmlns:js="js.core" xmlns:view="sprd.view">

    <js:Imports>
        sprd.model.Product
    </js:Imports>

    <js:Script>

        <![CDATA[
        (function (Product) {

            var rProductIdExtractor = /^http.*products\/(\d+).*$/;

            return {

                $classAttributes: ["article"],

                _commitArticle: function (article) {
                    var self = this;

                    if (article && !(article.$.resources || article.$.product)) {

                        console.log("will fetch article to get image");

                        // we got an article, without resources or product
                        // fetch article to get product id
                        article.fetch(null, function (err) {
                            if (!err) {
                                self.imageUrl.trigger();
                            }
                        });
                    }
                },

                imageUrl: function () {
                    // TODO: calc nearest height
                    if (this.$.article) {
                        var article = this.$.article;

                        var product;

                        if (article.$.product) {
                            // product for article available -> set product for ProductImage
                            product = article.$.product;
                        } else if (article.$.resources) {
                            var productId;

                            for (var i = 0; i < article.$.resources.length; i++) {
                                var resource = article.$.resources[i];

                                var match = rProductIdExtractor.exec(resource.href);
                                if (match) {
                                    productId = match[1];
                                    break;
                                }
                            }

                            if (productId) {
                                // create a product in correct context
                                product = this.$.article.context.createModel(Product, productId);
                            }
                        }

                        if (product) {
                            // set it for ProductImage
                            this.set('product', product);
                        }
                    }
                }.onChange('article', 'width', 'height'),

                alt: function () {
                    if (this.$.article) {
                        return this.$.article.$.name;
                    }

                    return "";
                }

            }
        })
        ]]>

    </js:Script>
</view:ProductImage>